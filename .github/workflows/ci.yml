name: CI with SonarCloud and DAST

on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build, Test & Security Scans
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --watchAll=false

      - name: Build the project
        run: npm run build

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 8
            --enableRetired

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck report
          path: ${{ github.workspace }}/reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarCloud Quality Gate
        run: |
          QUALITY_GATE_STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=your_project_key" | jq -r '.projectStatus.status')
          if [ "$QUALITY_GATE_STATUS" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build and Run Docker Container
        run: |
          docker build -t my-app .
          docker run -d -p 3000:3000 --name my-app-container my-app

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:3000'
          fail_action: true
          issue_title: 'DAST Scan Report'

      - name: Stop Docker Container
        run: docker stop my-app-container