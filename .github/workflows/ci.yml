name: CI with SonarCloud

on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build, Test & Dependency-Check Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write  # For SARIF upload in non-fork PRs
      contents: read         # For checkout and file access
      actions: read          # For workflow execution

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarCloud analysis

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Cache Dependency-Check Data
        uses: actions/cache@v4
        with:
          path: ~/.dependency-check/data
          key: dependency-check-${{ runner.os }}-${{ hashFiles('**/package.json') }}
          restore-keys: dependency-check-${{ runner.os }}-

      - name: Set up Java for Dependency-Check
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'  # Dependency-Check requires Java 11+

      - name: OWASP Dependency-Check Scan
        id: dependency-check
        continue-on-error: true  # Allow debugging even if scan fails
        uses: dependency-check/Dependency-Check_Action@master
        with:
          project: 'my-nodejs-project'  # Customize to your project name
          path: '.'                    # Project root
          format: 'SARIF,HTML'         # Generate SARIF and HTML for debugging
          args: >
            --failOnCVSS 7
            --enableRetired
            --scan ./package.json
            --out ./dependency-check-report
            --log ./dependency-check-report/log.txt  # Save logs for debugging

      - name: Debug Dependency-Check Output
        run: |
          echo "Dependency-Check Exit Code: ${{ steps.dependency-check.outcome }}"
          ls -la ./dependency-check-report || echo "Output directory not found"
          if [ -f ./dependency-check-report/dependency-check-report.sarif ]; then
            echo "SARIF file exists"
            cat ./dependency-check-report/dependency-check-report.sarif
          else
            echo "SARIF file not found"
          fi
          if [ -f ./dependency-check-report/log.txt ]; then
            echo "Dependency-Check Log:"
            cat ./dependency-check-report/log.txt
          else
            echo "Log file not found"
          fi

      - name: Upload Dependency-Check Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: ./dependency-check-report/

      - name: Upload Dependency-Check SARIF to GitHub
        if: always() && github.event.pull_request.head.repo.full_name == github.repository  # Skip for forks
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: './dependency-check-report/dependency-check-report.sarif'

      - name: Run unit tests
        run: npm test -- --watchAll=false

      - name: Build the project
        run: npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed for PR analysis
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}